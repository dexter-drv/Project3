diff -ruN linux-4.17/Makefile linux-4.17-modified/Makefile
--- linux-4.17/Makefile	2018-06-03 17:15:21
+++ linux-4.17-modified/Makefile	2023-12-23 15:33:35
@@ -978,7 +978,7 @@
 
 
 ifeq ($(KBUILD_EXTMOD),)
-core-y		+= kernel/ certs/ mm/ fs/ ipc/ security/ crypto/ block/
+core-y		+= kernel/ certs/ mm/ fs/ ipc/ security/ crypto/ block/ hello/
 
 vmlinux-dirs	:= $(patsubst %/,%,$(filter %/, $(init-y) $(init-m) \
 		     $(core-y) $(core-m) $(drivers-y) $(drivers-m) \
diff -ruN linux-4.17/arch/x86/entry/syscalls/syscall_64.tbl linux-4.17-modified/arch/x86/entry/syscalls/syscall_64.tbl
--- linux-4.17/arch/x86/entry/syscalls/syscall_64.tbl	2018-06-03 17:15:21
+++ linux-4.17-modified/arch/x86/entry/syscalls/syscall_64.tbl	2023-12-23 15:34:31
@@ -384,3 +384,5 @@
 545	x32	execveat		__x32_compat_sys_execveat/ptregs
 546	x32	preadv2			__x32_compat_sys_preadv64v2
 547	x32	pwritev2		__x32_compat_sys_pwritev64v2
+548     common  hello                   __x64_sys_hello
+549     common  inactivate              __x64_sys_inactivate
diff -ruN linux-4.17/hello/Makefile linux-4.17-modified/hello/Makefile
--- linux-4.17/hello/Makefile	1969-12-31 19:00:00
+++ linux-4.17-modified/hello/Makefile	2023-12-23 15:27:09
@@ -0,0 +1 @@
+obj-y := hello.o
diff -ruN linux-4.17/hello/hello.c linux-4.17-modified/hello/hello.c
--- linux-4.17/hello/hello.c	1969-12-31 19:00:00
+++ linux-4.17-modified/hello/hello.c	2023-12-23 15:27:33
@@ -0,0 +1,15 @@
+#include <linux/kernel.h>
+#include <linux/syscalls.h>
+extern int our_pid;
+extern int no_pages;
+SYSCALL_DEFINE2(hello, int, a, int, b)
+{
+        our_pid=a;
+        no_pages=b;
+        return 0;
+}
+SYSCALL_DEFINE0(inactivate)
+{
+        current->myflag = 1;
+        return 0;
+}
diff -ruN linux-4.17/include/linux/sched.h linux-4.17-modified/include/linux/sched.h
--- linux-4.17/include/linux/sched.h	2018-06-03 17:15:21
+++ linux-4.17-modified/include/linux/sched.h	2023-12-23 15:30:25
@@ -1167,6 +1167,7 @@
 	/* Used by LSM modules for access restriction: */
 	void				*security;
 #endif
+	int myflag;
 
 	/*
 	 * New fields for task_struct should be added above here, so that
diff -ruN linux-4.17/include/linux/syscalls.h linux-4.17-modified/include/linux/syscalls.h
--- linux-4.17/include/linux/syscalls.h	2018-06-03 17:15:21
+++ linux-4.17-modified/include/linux/syscalls.h	2023-12-23 15:35:45
@@ -1267,5 +1267,6 @@
 {
 	return do_sys_truncate(pathname, length);
 }
-
+asmlinkage long sys_hello(int, int);
+asmlinkage long sys_inactivate(void);
 #endif
diff -ruN linux-4.17/include/uapi/asm-generic/unistd.h linux-4.17-modified/include/uapi/asm-generic/unistd.h
--- linux-4.17/include/uapi/asm-generic/unistd.h	2018-06-03 17:15:21
+++ linux-4.17-modified/include/uapi/asm-generic/unistd.h	2023-12-23 15:37:02
@@ -733,8 +733,12 @@
 #define __NR_statx 291
 __SYSCALL(__NR_statx,     sys_statx)
 
+#define __NR_process_hello 292
+__SYSCALL(__NR_process_hello, sys_hello)
+#define __NR_process_inactivate 293
+__SYSCALL(__NR_process_inactivate, sys_inactivate)
 #undef __NR_syscalls
-#define __NR_syscalls 292
+#define __NR_syscalls 294
 
 /*
  * 32 bit systems traditionally used different
diff -ruN linux-4.17/kernel/sched/fair.c linux-4.17-modified/kernel/sched/fair.c
--- linux-4.17/kernel/sched/fair.c	2018-06-03 17:15:21
+++ linux-4.17-modified/kernel/sched/fair.c	2023-12-23 15:29:02
@@ -823,6 +823,9 @@
 	schedstat_add(cfs_rq->exec_clock, delta_exec);
 
 	curr->vruntime += calc_delta_fair(delta_exec, curr);
+	if(task_of(curr)->myflag){
+                curr->vruntime*=16;
+        }
 	update_min_vruntime(cfs_rq);
 
 	if (entity_is_task(curr)) {
diff -ruN linux-4.17/mm/memory.c linux-4.17-modified/mm/memory.c
--- linux-4.17/mm/memory.c	2018-06-03 17:15:21
+++ linux-4.17-modified/mm/memory.c	2023-12-23 15:32:14
@@ -4121,7 +4121,16 @@
 	if (unlikely(is_vm_hugetlb_page(vma)))
 		ret = hugetlb_fault(vma->vm_mm, vma, address, flags);
 	else
-		ret = __handle_mm_fault(vma, address, flags);
+	{
+		if ((vma->vm_flags & VM_SHARED) && (our_pid == current->parent->pid))
+                {
+                        int my_ctr;
+                        for(my_ctr=0; my_ctr<no_pages; my_ctr++)
+                                ret = __handle_mm_fault(vma, address+(4096*my_ctr), flags);
+                }
+                else
+                        ret = __handle_mm_fault(vma, address, flags);
+	}
 
 	if (flags & FAULT_FLAG_USER) {
 		mem_cgroup_oom_disable();
